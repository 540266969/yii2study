<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/6/29 0029
 * Time: 11:55
 */

namespace frontend\controllers;


use backend\models\Article;
use backend\models\ArticleCategory;
use backend\models\Goods;
use backend\models\GoodsCategory;
use frontend\models\Address;
use frontend\models\Cart;
use frontend\models\Member;
use frontend\models\Order;
use frontend\models\OrderGoods;
use yii\db\Exception;
use yii\helpers\ArrayHelper;
use yii\web\Controller;
use yii\web\Cookie;
use yii\web\NotFoundHttpException;
use yii\web\Response;

class ApiController extends Controller
{
    public $enableCsrfValidation=false;
    public function init()
    {
        \Yii::$app->response->format=Response::FORMAT_JSON;
        parent::init(); // TODO: Change the autogenerated stub
    }
    //用户注册接口
    public function actionUserRegister(){
        $request=\Yii::$app->request;
        if($request->isPost){
            $model=new Member();
            $model->username=$request->post('username');
            $model->password_hash=\Yii::$app->security->generatePasswordHash($request->post('password'));
            $model->email=$request->post('email');
            $model->tel=$request->post('tel');
            $model->auth_key=\Yii::$app->security->generateRandomString();
            $model->status=1;
            $model->created_at=time();
            $model->code=$request->post('code');
            if($model->validate()){
                $model->save();
                return ['status'=>1,'msg'=>'','data'=>$model->toArray()];
            }else{
                return ['status'=>-1,'msg'=>$model->getErrors()];
            }
        }
        return ['status'=>-1,'msg'=>'请使用post请求'];
    }
    //用户登录接口
    public function actionUserLogin(){
        $request=\Yii::$app->request;
        if($request->isPost){
            $user=Member::findOne(['username'=>$request->post('username')]);
            if($user){
                if(\Yii::$app->security->validatePassword($request->post('password'),$user->password_hash)){
                    \Yii::$app->user->login($user);
                    return['status'=>1,'msg'=>'登录成功','data'=>$user->username];
                }
            }
            return ['status'=>-1,'msg'=>'用户名或者密码错误'];
        }
        return ['status'=>-1,'msg'=>'请使用post请求'];
    }
    //用户修改密码接口
    public function actionUserEditPwd(){
        if(!\Yii::$app->user->isGuest){
            $request=\Yii::$app->request;
            if($request->isPost){
                $id=\Yii::$app->user->id;
                $user=Member::findOne(['id'=>$id]);
                if(\Yii::$app->security->validatePassword($request->post('oldpassword'),$user->password_hash)){
                    if($request->post('password')==$request->post('repassword')){
                            $user->password_hash=\Yii::$app->security->generatePasswordHash($request->post('password'));
                            $user->save();
                            return ['status'=>1,'msg'=>'密码修改成功'];
                    }
                    return ['status'=>-1,'msg'=>'两次密码不一致'];
                }
                return ['status'=>-1,'msg'=>'原密码错误'];
            }
            return ['status'=>-1,'msg'=>'请使用post请求'];
        }
        return ['status'=>-1,'msg'=>'请先登录在操作'];
    }
    //返回用户信息接口
    public function actionUserInfo(){
        if(\Yii::$app->user->isGuest){
            return ['status'=>-1,'msg'=>'请先登录'];
        }
        $userinfo=\Yii::$app->user->identity;
        return ['status'=>1,'msg'=>'','data'=>$userinfo->toArray()];
    }
    //收获地址添加
    public function actionAddressAdd(){
        if(\Yii::$app->user->isGuest){
            return ['status'=>-1,'msg'=>'请先登录'];
        }
        $request=\Yii::$app->request;
        if($request->isPost){
            $model=new Address();
            $model->username=$request->post('username');
            $model->privace=$request->post('privace');
            $model->city=$request->post('city');
            $model->area=$request->post('area');
            $model->detail=$request->post('detail');
            $model->tel=$request->post('tel');
            $model->member_id=\Yii::$app->user->id;
            if($request->post('is_default')!==null){
                $model->is_default=1;
            }
            if($model->validate()){
                $model->save();
                return ['status'=>'1','msg'=>'添加成功'];
            }
            return ['stutus'=>-1,'msg'=>$model->getErrors()];
        }
        return ['status'=>-1,'msg'=>'请使用post方式提交'];
    }
    //编辑收货地址
    public function actionAddressEdit(){
        if(\Yii::$app->user->isGuest){
            return ['status'=>-1,'msg'=>'请先登录'];
        }
        $request=\Yii::$app->request;
        if($request->isPost){
            $id=$request->post('id');
            $model=Address::findOne(['id'=>$id]);
            if($model==null){
                return ['status'=>-1,'msg'=>'收货地址不存在'];
            }
            //return $request->post();
            //return $model->load($request->post());
            if($model->load($request->post())&&$model->validate()){
                $model->save();
                return ['status'=>1,'msg'=>'修改成功'];
            }
            return ['status'=>-1,'msg'=>$model->getErrors()];
        }
        return ['status'=>-1,'msg'=>'请使用post方式提交'];
    }
    //删除收货地址
    public function actionAddressDel(){
        if(\Yii::$app->user->isGuest){
            return ['status'=>-1,'msg'=>'请先登录'];
        }
        $request=\Yii::$app->request;
        if($request->isGet){
            $id=$request->get('id');
            $model=Address::findOne(['id'=>$id]);
            if ($model==null){
                return ['status'=>-1,'msg'=>'删除的地址不存在'];
            }
            $model->delete();
            return ['status'=>1,'msg'=>'删除成功'];
        }
        return ['status'=>-1,'msg'=>'请使用get方式请求'];
    }
    //收货地址列表
    public function actionAddressList(){
        if(\Yii::$app->user->isGuest){
            return ['status'=>-1,'msg'=>'请先登录'];
        }
        $member_id=\Yii::$app->user->id;
        //$member_id=4;
        $models=Address::find()->where(['member_id'=>$member_id])->asArray()->all();
        if ($models==null){
            return ['status'=>-1,'msg'=>'用户还没有设置收货地址'];
        }
        return ['status'=>-1,'msg'=>'','data'=>$models];
    }
    //获取所有商品分类
    public function actionGoodsCategoryAll(){
        $models=GoodsCategory::find()->asArray()->all();
        if($models==null){
            return ['status'=>-1,'msg'=>'商品分类暂时不存在'];
        }
        return ['status'=>1,'msg'=>'','data'=>$models];
    }
    //获取商品下级分类
    public function actionGoodsCategoryList(){
        $request=\Yii::$app->request;
        if($request->isGet){
            $id=$request->get('id');
            $models=GoodsCategory::find()->where(['parent_id'=>$id])->asArray()->all();
            if($models){
                return ['status'=>-1,'msg'=>'','data'=>$models];
            }
            return ['status'=>-1,'msg'=>'下级分类不存在'];
        }
        return ['status'=>-1,'msg'=>'请使用get方式提交请求'];
    }
    //获取商品分类的上级分类
    public function actionGoodsCategoryParent(){
        $request=\Yii::$app->request;
        if($request->isGet){
            $parent_id=$request->get('parent_id');
            $models=GoodsCategory::find()->where(['id'=>$parent_id])->asArray()->one();
            if($models){
                return ['status'=>-1,'msg'=>'','data'=>$models];
            }
            return ['status'=>-1,'msg'=>'上级分类不存在'];
        }
        return ['status'=>-1,'msg'=>'请使用get方式提交请求'];
    }
    //获取分类下面的商品列表
    public function actionGoodsList(){
        $request=\Yii::$app->request;
        if($request->isGet){
            $goods_category_id=$request->get('id');
            $goodscate=GoodsCategory::findOne(['id'=>$goods_category_id]);
            //return $goodscate;
            if($goodscate->depth!=2){
                $models=GoodsCategory::find()->where(['tree'=>$goodscate->tree])->andWhere(['>','lft',$goodscate->lft])->all();
                //return $models;
                $lists=[];
                foreach ($models as $model){
                    if($model->depth==1){
                        continue;
                    }
                    $list=Goods::find()->where(['goods_category_id'=>$model->id])->asArray()->all();
                    if($list==null){
                        continue;
                    }
                    $lists=ArrayHelper::merge($lists,$list);
                    if($lists==null){
                        return ['status'=>-1,'msg'=>'该分类下暂时没有商品'];
                    }
                }
                return ['status'=>1,'msg'=>'','data'=>$lists];
            }
        }
        return ['status'=>-1,'msg'=>'请使用get方式提交请求'];
    }
    //通过品牌获取商品列表
    public function actionGetGoodsByBrand(){
        $request=\Yii::$app->request;
        if($request->isGet){
            $brand_id=$request->get('id');
            $models=Goods::find()->where(['brand_id'=>$brand_id])->asArray()->all();
            if($models==null){
                return ['status'=>-1,'msg'=>'该商品暂时没有产品'];
            }
            return ['status'=>1,'msg'=>'','data'=>$models];
        }
        return ['status'=>-1,'msg'=>'请使用get方式提交请求'];
    }
    //获取全部文章分类
    public function actionArticleCategory(){
        $request=\Yii::$app->request;
        if($request->isGet){
            $models=ArticleCategory::find()->where(['id'=>$id])->asArray()->all();
            if($models==null){
                return ['status'=>-1,'msg'=>'该分类不存在'];
            }
            return ['status'=>1,'msg'=>'','data'=>$models];
        }
        return ['status'=>-1,'msg'=>'请使用get方式提交请求'];
    }
    //通过分类查找文章
    public function actionGetArticle(){
        $request=\Yii::$app->request;
        if($request->isGet){
            $id=$request->get('id');
            $models=Article::find()->where(['article_category_id'=>$id])->asArray()->all();
            if($models==null){
                return ['status'=>-1,'msg'=>'该分类暂时没有文章'];
            }
            return ['status'=>1,'msg'=>'','data'=>$models];
        }
        return ['status'=>-1,'msg'=>'请使用get方式提交请求'];
    }
    //通过文章获取分类信息
    public function actionGetCateByArticle(){
        $request=\Yii::$app->request;
        if($request->isGet){
            $id=$request->get('id');
            $cate_id=Article::find()->where(['id'=>$id])->one()->article_category_id;
            //return $cate_id;
            $models=ArticleCategory::find()->where(['id'=>$cate_id])->asArray()->one();
            return ['status'=>1,'msg'=>'','data'=>$models];
        }
        return ['status'=>-1,'msg'=>'请使用get方式提交请求'];
    }
    //添加商品到购物车
    public function actionCartAdd(){
        $request=\Yii::$app->request;
        if($request->isPost){
            $goods_id = $request->post('goods_id');
            $amount = $request->post('amount');
            $goods = Goods::findOne(['id' => $goods_id]);
            if ($goods == null) {
                return ['status'=>-1,'msg'=>'您请求的商品不存在'];
            }
            if (\Yii::$app->user->isGuest) {
                $cookies = \Yii::$app->request->cookies;
                $cookie = $cookies->get('cart');
                if ($cookie) {
                    $data = unserialize($cookie);
                } else {
                    $data = [];
                }
                if (array_key_exists($goods_id, $data)) {
                    $data[$goods_id] += $amount;
                } else {
                    $data[$goods_id] = $amount;
                }
                $cookie = new Cookie(['name' => 'cart', 'value' => serialize($data)]);
                $cookies = \Yii::$app->response->cookies;
                $cookies->add($cookie);
            } else {
                $items = Cart::findOne(['goods_id' => $goods_id]);
                if ($items) {
                    $items->amount = $items->amount + $amount;
                    $items->save();
                } else {
                    $model = new Cart();
                    $model->member_id = \Yii::$app->user->id;
                    $model->amount = $amount;
                    $model->goods_id = $goods_id;
                    $model->save();
                }
            }
            return ['status'=>1,'msg'=>'商品添加成功'];
        }
        return ['status'=>-1,'msg'=>'请使用post方式提交请求'];
    }
    //修改购物车商品数量
    public function actionCartEdit(){
        $request=\Yii::$app->request;
        if ($request->isPost){
            $goods_id = \Yii::$app->request->post('goods_id');
            $amount = \Yii::$app->request->post('amount');
            $goods = Goods::findOne(['id' => $goods_id]);
            if ($goods == null) {
                return ['status'=>-1,'msg'=>'您请求的商品不存在'];
            }
            if (\Yii::$app->user->isGuest) {
                $cookies = \Yii::$app->request->cookies;
                $cookie = $cookies->get('cart');
                if ($cookie) {
                    $data = unserialize($cookie);
                } else {
                    $data = [];
                }
                if ($amount) {
                    $data[$goods_id] = $amount;
                } else {
                    unset($data[$goods_id]);
                }
                $cookie = new Cookie(['name' => 'cart', 'value' => serialize($data)]);
                $cookies = \Yii::$app->response->cookies;
                $cookies->add($cookie);
            } else {
                $model = Cart::findOne(['goods_id' => $goods_id]);
                if ($amount) {
                    $model->amount = $amount;
                    $model->save();
                } else {
                    $model->delete();
                }
            }
            return ['status'=>1,'msg'=>'商品修改成功'];
        }
        return ['status'=>-1,'msg'=>'请使用post方式提交请求'];
    }
    //清空购物车
    public function actionCartDelAll(){
        if(\Yii::$app->user->isGuest){
            $cookies=\Yii::$app->response->cookies;
            $cookies->remove('cart');
        }else{
            $member_id=\Yii::$app->user->id;
            $models=Cart::findAll(['member_id'=>$member_id]);
            foreach ($models as $model){
                $model->delete();
            }
        }
        return ['status'=>1,'msg'=>'购物车清空成功'];
    }
    //获取购物车列表
    public function actionCartList(){
        if (\Yii::$app->user->isGuest) {
            $cookies = \Yii::$app->request->cookies;
            $data = unserialize($cookies->get('cart'));
            //var_dump($data);exit();
            $lists = [];
            foreach ($data as $k => $v) {
                $list = Goods::find()->where(['id' => $k])->asArray()->one();
                $list['amount'] = $v;
                $lists[] = $list;
            }
        } else {
            $member_id = \Yii::$app->user->id;
            $models = Cart::find()->where(['member_id' => $member_id])->all();
            $lists = [];
            foreach ($models as $v) {
                $list = Goods::find()->where(['id' => $v->goods_id])->asArray()->one();
                $list['amount'] = $v->amount;
                $lists[] = $list;
            }
        }
        if($lists){
            return ['status'=>1,'msg'=>'','data'=>$lists];
        }
        return ['status'=>-1,'msg'=>"购物车中还没有商品哦"];
    }
    //获取支付方式
    public function actionGetPayment(){
        if(\Yii::$app->request->isGet){
            $payment=Order::$payment;
            return ['status'=>-1,'msg'=>"",'data'=>$payment];
        }
        return ['status'=>-1,'msg'=>"请使用get方式请求数据"];
    }
    public function actionGetDelivery(){
        if(\Yii::$app->request->isGet){
            $delivery=Order::$delivery;
            return ['status'=>-1,'msg'=>"",'data'=>$delivery];
        }
        return ['status'=>-1,'msg'=>"请使用get方式请求数据"];
    }
    //添加订单
    public function actionOrderAdd(){
        $request=\Yii::$app->request;
        if($request->isPost){
            $delivery_id= $request->post('delivery_id',0)-0;
            $payment_id= $request->post('payment_id',0)-0;
            $address_id= $request->post('address_id',0)-0;
            if(!$payment_id||!$delivery_id||!$address_id){
                return ['status'=>-1,'msg'=>"请确认必须的选项"];
            }
            if(\Yii::$app->user->isGuest){
                return ['status'=>-1,'msg'=>"请先登录"];
            }
            $trasaction=\Yii::$app->db->beginTransaction();
            try{
                $member_id=\Yii::$app->user->id;
                $address=\frontend\models\Address::findOne(['id'=>$address_id]);
                $carts = Cart::find()->where(['member_id' => $member_id])->all();
                $total=0;
                foreach ($carts as $cart){
                    $price=Goods::find()->where(['id'=>$cart->goods_id])->one()->shop_price;
                    $total+=($cart->amount*$price);
                }
                $order =new Order();
                $order->member_id=$member_id;
                $order->name=$address->username;
                $order->province=$address->privaces->name;
                $order->city=$address->cites->name;
                $order->area=$address->areas->name;
                $order->address=$address->detail;
                $order->tel=$address->tel;
                $order->delivery_id=$delivery_id;
                $order->delivery_name=Order::$delivery[$delivery_id]['delivery_name'];
                $order->delivery_price=Order::$delivery[$delivery_id]['delivery_price'];
                $order->payment_id=$payment_id;
                $order->payment_name=Order::$payment[$payment_id]['payment_name'];
                $order->total=$total+Order::$delivery[$delivery_id]['delivery_price'];
                $order->status=1;
                $order->trade_no='';
                $order->create_time=time();
                $order->save(false);
//            var_dump($order->save());
//            var_dump($order->getErrors());
//            exit;
                foreach ($carts as $cart){
                    $goods=Goods::findOne(['id'=>$cart->goods_id]);
                    $order_goods=new OrderGoods();
                    $order_goods->order_id=$order->id;
                    $order_goods->goods_id=$goods->id;
                    $order_goods->goods_name=$goods->name;
                    $order_goods->logo=$goods->logo;
                    $order_goods->price=$goods->shop_price;
                    $order_goods->amount=$cart->amount;
                    $order_goods->total=($goods->shop_price)*($cart->amount);
                    $order_goods->save(false);
                    $goods->stock=$goods->stock-$cart->amount;
                    if($goods->stock<0){
                        throw new Exception('库存不足');
                    }
                    $goods->save(false);
                    $cart->delete();
                }
                $trasaction->commit();
                return ['status'=>1,'msg'=>"",'data'=>'订单添加成功'];
            }catch (Exception $e){
                var_dump($e->getMessage());
                $trasaction->rollBack();
                return ['status'=>-1,'msg'=>$e->getMessage()];
            }
        }
        return ['status'=>-1,'msg'=>"请使用post方式请求数据"];
    }
    //取消订单
    public function actionOrderDel(){
        if(\Yii::$app->user->isGuest){
            return ['status'=>-1,'msg'=>"请登陆后在操作"];
        }
        $request=\Yii::$app->request;
        if($request->isPost){
            $id=$request->post('id');
            $order=Order::findOne(['id'=>$id]);
            if(!$order||$order->status==0){
                return ['status'=>-1,'msg'=>"该订单不存在或已经被取消"];
            }
            $transaction=\Yii::$app->db->beginTransaction();
            try{
                $order_goods=OrderGoods::findAll(['order_id'=>$id]);
                foreach ($order_goods as $order_good){
                    $goods=$order_good->goods;
                    $goods->stock=$goods->stock+$order_good->amount;
                    $goods->save();
                    $order_good->delete();
                }
                $order->status=0;
                $order->save();
                $transaction->commit();
                return ['status'=>1,'msg'=>"",'data'=>'订单取消成功'];
            }catch (Exception $e){
                $transaction->rollBack();
                return ['status'=>-1,'msg'=>$e->errorInfo];
            }

        }
        return ['status'=>-1,'msg'=>"请使用post方式请求数据"];
    }
//高级api
//-验证码
public function  actions()
{
    return [
        'captcha' => [
            'class' => 'yii\captcha\CaptchaAction',
            'fixedVerifyCode' => YII_ENV_TEST ? 'testme' : null,
            'minLength'=>3,
            'maxLength'=>3,
        ],
    ];
}
//-文件上传
//分页
//手机验证码
}